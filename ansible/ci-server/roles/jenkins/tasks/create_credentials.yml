- name: Set name and password credentials
  jenkins_script:
    script: |+
      import jenkins.model.*
      import com.cloudbees.plugins.credentials.*
      import com.cloudbees.plugins.credentials.common.*
      import com.cloudbees.plugins.credentials.domains.*
      import com.cloudbees.plugins.credentials.impl.*
      import hudson.plugins.sshslaves.*;

      def global_domain = Domain.global()
      def credentials_store = Jenkins.instance.getExtensionList(
          'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
      )[0].getStore()

      def credentials = new UsernamePasswordCredentialsImpl(
        CredentialsScope.GLOBAL,
        "{{ jenkins_credential.id }}",
        "{{ jenkins_credential.description }}",
        "{{ jenkins_credential.username }}",
        "{{ jenkins_credential.password }}",
      )
      credentials_store.addCredentials(global_domain, credentials)
  register: set_credential_result
  # changed_when: set_credential_result.output.find('true') != -1

# - name: Set SSH user private key credentials
#   jenkins_script:
#       script: |+
#         import jenkins.model.*
#         import com.cloudbees.plugins.credentials.*
#         import com.cloudbees.plugins.credentials.common.*
#         import com.cloudbees.plugins.credentials.domains.*
#         import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
#         import hudson.plugins.sshslaves.*;
#
#         String private_key = '''
#         {{ jenkins_credentials.ssh_private_key}}
#         '''
#
#         global_domain = Domain.global()
#         credentials_store = Jenkins.instance.getExtensionList(
#             'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
#         )[0].getStore()
#
#         credentials = new BasicSSHUserPrivateKey(
#           CredentialsScope.GLOBAL,
#           "{{ jenkins_credential.id }}",
#           "{{ jenkins_credential.username }}",
#           new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource("${private_key}"),
#           "{{ jenkins_credential.password }}",
#           "{{ jenkins_credential.descripttion }}"
#         )
#         credentials_store.addCredentials(global_domain, credentials)
#     register: set_credential_result
#     changed_when: set_credential_result.output.find('true') != -1
#
# - name: Set SSH user private key credentials
#   jenkins_script:
#       script: |+
#         import jenkins.model.*
#         import com.cloudbees.plugins.credentials.*
#         import com.cloudbees.plugins.credentials.common.*
#         import com.cloudbees.plugins.credentials.domains.*
#         import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
#         import hudson.plugins.sshslaves.*;
#
#         String private_key = '''
#         {{ jenkins_credentials.ssh_private_key}}
#         '''
#
#         global_domain = Domain.global()
#         credentials_store = Jenkins.instance.getExtensionList(
#             'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
#         )[0].getStore()
#
#         credentials = new CertificateCredentialsImpl(
#           CredentialsScope.GLOBAL,
#           "{{ jenkins_credential.id }}",
#           "{{ jenkins_credential.descripttion }}",
#           "{{ jenkins_credential.password }}",
#           new CertificateCredentialsImpl.FileOnMasterKeyStoreSource("{{ jenkins_credential.keyStoreFile }}"),
#         )
#         credentials_store.addCredentials(global_domain, credentials)
#     register: set_credential_result
#     changed_when: set_credential_result.output.find('true') != -1
