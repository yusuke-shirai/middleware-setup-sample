- name: Set Jenkins security
  jenkins_script:
    script: |+
      import hudson.security.*
      import jenkins.model.*

      def instance = Jenkins.getInstance()
      def hudsonRealm = new HudsonPrivateSecurityRealm(false)
      def users = hudsonRealm.getAllUsers()
      users_s = users.collect { it.toString() }

      // Create the admin user account if it doesn't already exist.
      if ("{{ jenkins_admin.username }}" in users_s) {
          println "Admin user already exists - updating password"

          def user = hudson.model.User.get('{{ jenkins_admin.username }}');
          def password = HudsonPrivateSecurityRealm.Details.fromPlainPassword(
            '{{ jenkins_admin.password }}')
          user.addProperty(password)
          user.save()
      } else {
          println "--> creating local admin user"

          hudsonRealm.createAccount(
            '{{ jenkins_admin.username }}',
            '{{ jenkins_admin.password }}')
          instance.setSecurityRealm(hudsonRealm)

          def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
          instance.setAuthorizationStrategy(strategy)
          instance.save()
      }
  register: create_admin_result
